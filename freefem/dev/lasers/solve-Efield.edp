/* Written for FreeFEM++ v4.15 */

// This solves the Helmholtz equation
// for a rectangular RF cavity with a small
// aperture

int top = 1;
int left = 2;
int bottom = 3;
int upperRight = 4;
int lowerRight = 5;
int edge = 6;
int aperture = 7;

real a = 0.3; // aperture diameter
real b = (1 - a) / 2;
real R = 10.0; // This should be a "large" number to simulate infinite domain

 // use (n, m)-th mode
int n = 1;
int m = 0;
real k = sqrt(n^2 + m^2) * pi;

// in theory, we would need an infinite domain
// to properly simulate waves propagating to
// infinity, but we'll approximate this
// by making the domain bounded by a circle
// of radius R that is effectively infinite
border boxtop(t=1, 0){ x=t; y=1; label=top; } // top
border boxrightup(t=0, b){ x=1; y=t; label=upperRight; } // upper right
border boxrightdown(t=0, b){ x=1; y=(1 - t); label=lowerRight; } // lower right
border boxaperture(t=0, 1){ x=1; y=((t + b/a)*a); label=aperture; } // aperture
border boxbottom(t=0, 1){ x=t; y=0; label=bottom; } // bottom
border boxleft(t=1, 0){ x=0; y=t; label=left; } // left
border circle(t=0,2*pi){x=(R*cos(t) + 0.5); y=(R*sin(t) + 0.5); label=edge; } // circular boundary to fake a boundary at infinity

int nSides = 50;
int nOpening = 25;
int nCircle = 200;

mesh Th = buildmesh(
    boxtop(nSides) + boxrightup(nOpening)
    + boxrightdown(nOpening) + boxbottom(nSides) 
    + boxleft(nSides) + circle(nCircle)
    + boxaperture(nOpening)
    );
plot(Th, cmm="Discretized domain", value=1, wait=1);

/*
For values of k^2 = (n^2 + m^2) pi^2
then the homogenous Neumann problem
yields a solution even with
E = 0 at the boundaries.

For all other values of k, the homogenous
Neumann problem yields a null solution, since
the Helmholtz equation (D^2 + k^2) E = 0
is an eigenvalue problem and the only
solutions are the eigenfunctions of the
Helmholtz operator.
*/

fespace Vh(Th, P1);
Vh<complex> TestPhi, Emag;

macro grad(u) [dx(u), dy(u)] //

solve Helmholtz(Emag, TestPhi)
    = int2d(Th)(
        grad(Emag)' * grad(TestPhi)
    )
    - int2d(Th) (
        k^2 * Emag * TestPhi
    )
    // radiative BC at "infinite" edge
    - int1d(Th, edge)(
        1i * k * Emag * TestPhi
    )
    // perfectly-reflective BC
    + on(top, bottom, left, upperRight, lowerRight, Emag=0)
    // absorption (neumann) BC
    + on(aperture, Emag=1);

Vh Ereal = real(Emag);
Vh Eimag = imag(Emag);
Vh Eabs = abs(Emag);

// plot real & imaginary parts of the field
plot(Ereal, value=true, fill=true, dim=2, cmm="Real Part of E-field (k=" + k + ")", ps="rf-cavity.ps", wait=1);
plot(Eimag, value=true, fill=true, dim=2, cmm="Imaginary Part of E-field (k=" + k + ")", wait=1);
